useful
installed.packages()
library(dplyr)
installed.packages() %>% as_tibble
installed.packages() %>% as_tibble %>% View
#' infix function for replacing NULL
#'
#' This function replaces possible NULL in a single line of code.
#' @param
#' @keywords replace null
#' @export
#' @examples
#' NULL %if_null% iris
`%if_null%` <- `%||%` <- function(a, b) if (!is.null(a)) a else b
NULL %||% iris
T %||% iris
NA %if_na% iris
#' infix function for replacing NA
#'
#' This function replaces possible NA in a single line of code.
#' @param
#' @keywords replace NA
#' @export
#' @examples
#' NA %if_na% iris
`%if_na%` <- function(a, b) if (!is.null(a)) a else b
NA %if_na% iris
#' infix function for replacing NA
#'
#' This function replaces possible NA in a single line of code.
#' @param
#' @keywords replace NA
#' @export
#' @examples
#' NA %if_na% iris
`%if_na%` <- function(a, b) if (!is.na(a)) a else b
NA %if_na% iris
NaN %if_na% iris
T %if_na% iris
NULL %if_na% iris
NULL %if_na% iris
!is.na(NULL)
#' infix function for replacing NA
#'
#' This function replaces possible NA in a single line of code.
#' @param
#' @keywords replace NA
#' @export
#' @examples
#' NA %if_na% iris
`%if_na%` <- function(a, b) if (!is.null(a) && !is.na(a)) a else b
NULL %if_na% iris
NULL %if_na% iris
#' infix function for replacing NA or NULL
#'
#' This function replaces possible NA or NULL in a single line of code.
#' @param
#' @keywords replace NA
#' @export
#' @examples
#' NA %if_na% iris
`%if_na%` <- `%@@%` <- function(a, b) if (!is.null(a) && !is.na(a)) a else b
NA %@@% iris
getwd()
install('cats')
devtools::install('cats')
library(usefull)
rm(list=ls())
NULL %||% iris
??usefull::`%if_na%`
setwd('./cats')
getwd()
